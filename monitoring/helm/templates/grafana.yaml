apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Values.namespace }}
  labels:
{{ include "chart.mergeLabels" . | indent 4 }}
  annotations:
{{- $ann := include "chart.mergeAnnotations" . -}}
{{- if $ann | trim }}
{{ $ann | indent 4 }}
{{- else }}
    {}
{{- end }}
spec:
  replicas: {{ .Values.grafana.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.grafana.podLabels }}
{{ toYaml .Values.grafana.podLabels | indent 8 }}
{{- end }}
      annotations:
{{- if .Values.grafana.podAnnotations }}
{{ toYaml .Values.grafana.podAnnotations | indent 8 }}
{{- else }}
        {}
{{- end }}
    spec:
      containers:
        - name: grafana
          image: {{ .Values.grafana.image }}
          imagePullPolicy: {{ .Values.grafana.imagePullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUser }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword }}
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: {{ .Values.grafana.storage.pvcName }}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{ .Values.namespace }}
  labels:
{{ include "chart.mergeLabels" . | indent 4 }}
{{- if .Values.grafana.service.labels }}
{{ toYaml .Values.grafana.service.labels | indent 4 }}
{{- end }}
  annotations:
{{- if .Values.grafana.service.annotations }}
{{ toYaml .Values.grafana.service.annotations | indent 4 }}
{{- else }}
    {}
{{- end }}
spec:
  type: {{ .Values.grafana.service.type }}
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
    - name: http
      port: {{ .Values.grafana.service.port }}
      targetPort: 3000
{{- if eq .Values.grafana.service.type "NodePort" }}
      nodePort: {{ .Values.grafana.service.nodePort }}
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.grafana.storage.pvcName }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "chart.mergeLabels" . | indent 4 }}
spec:
  accessModes:
    - {{ .Values.grafana.storage.accessMode }}
  resources:
    requests:
      storage: {{ .Values.grafana.storage.size }}
  storageClassName: {{ .Values.grafana.storage.storageClassName }}
